name: Rust

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -y libglib2.0-dev libatk1.0-dev libgtk-3-dev pkg-config build-essential

      - name: Build project
        run: cargo build --release

      - name: macOS ad-hoc code signing
        if: matrix.os == 'macos-latest'
        run: |
          codesign --sign - target/release/$(basename $(pwd)) || true

      - name: Archive release binary
        run: |
          mkdir -p dist
          cp target/release/idevice_pair dist/
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-idevice_pair
          path: dist/
